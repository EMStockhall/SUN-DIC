#-------------------------------------------------------------------------------------
[General]
#-------------------------------------------------------------------------------------
# Set the debug level - higer levels produce more output
# int - larger or equal to zero
#   0 - No debug output
#   1 - Top level debug output
#   2 - Iteration level output - not needed in most cases, useful for development 
#       and debugging
# Default is 0
DebugLevel = 1

# Subdirectory that contains the images
# string - path to the images subdirectory
# Default is images
ImageFolder = planar_images

# Number of CPU's to use in the analysis.  If set to auto the code
# will use all available CPU's
# NB Using auto is generally not a good idea as it may overload the system and
#    thus slow down the runtime.  For example, on my 8 core machine using
#    CPUCount = 4 gives the best overall runtime.  Also using multiple cores has 
#    a bigger effect on jobs with longer run times - eg when using many subsets, 
#    and/or when using Quadratic shape functions and IG-LM
#
#    Setting CPUCount to 1 will run a serial version of the code
#
# int - larger or equal to 1 or auto
# Default is 1
CPUCount = 4

# Set the type of DIC to perform
# string - Planar | Stereo
#   Planar - 2D DIC using a single camera is performed
#   Stereo - Stereo DIC with two cameras is performed
# Default is Planar
## RESERVED FOR FUTURE USE
DICType = Planar

#-------------------------------------------------------------------------------------
[DICSettings]
#-------------------------------------------------------------------------------------
# The subset size to use (in pixels) - use odd sizes
# int - larger or equal to 1 and odd
# Default is 33
SubSetSize = 33

# The subset step size to use (in pixels)
# int - larger or equal to 1 and odd
# Default is 5
StepSize = 11

# Subset shape functions to use
# string - Affine | Quadratic
#   Affine - Use Affine/ Linear shape functions
#   Quadratic - Use Quadratic shape functions
# Default is Affine
ShapeFunctions = Affine

# The number of starting points to use for the optimization.  The total number
# of points will be the number of starting points squared.
# int - larger or equal to 1
# Default is 4
StartingPoints = 5

# The reference startegy between images if more than two images is supplied
# string - Incremental | Absolute
#   Incremental - The reference image is the previous image
#   Absolute - The reference image is the first image
# Default is Incremental
## RESERVED FOR FUTURE USE
ReferenceStrategy = Incremental

#-------------------------------------------------------------------------------------
[PreProcess]
#-------------------------------------------------------------------------------------
# The Gaussian blur size - the GaussianBlurSize must be larger than zero for the blur
# to be applied
# int - larger or equal to 1, odd
# Default is 5 - Thus a 5x5 blur area is applied
GaussianBlurSize = 5

# The Gaussian blur standard deviation - the GaussianBlurSize must be larger than zero
# for the blur to be applied
# float - larger or equal to 0.0
# Default is 0.0 - calculated from the kernel size
GaussianBlurStdDev = 0.0

#-------------------------------------------------------------------------------------
[ImageSetDefinition]
#-------------------------------------------------------------------------------------
# The reference/first image in your set - this is the image to which all measurements 
# will be made
# int - larger or equal to 0
# Default is 0
DatumImage = 0

# The target/final image in your set
# int - larger than DatumImage
# Default is 1
TargetImage = 1

# Increment between images (from datum to target) if more than two images is supplied
# int - larger or equal to 1
# Default is 1 - All images will be used
Increment = 1

# Define the region of interest (ROI) in the image
# The ROI is defined by specifying the x and y coordinates of the the top left corner 
# followed by the length and width of the ROI
# int[] -  array of four integers all larger than 0
# Default is 0, 0, 0, 0 - the whole image is used
ROI = 50, 50, 300, 950

# Cutoff value to detect all black background in image
# This value will be used to detect all black (< Cutoff) areas in the image.  This 
# is useful for automatically removing unwanted areas from the image, eg hole in the
# sample.  However, the background MUST be black
# int - larger or equal to 0
# Default is 25
BackgroundCutoff = 25

#-------------------------------------------------------------------------------------
[Optimisation]
#-------------------------------------------------------------------------------------
# The optimization algorithm to use
# string - IC-GN | IC-LM
#   IC-GN - Use the Incremental Gauss Newton algorithm
#   IC-LM - Use the Incremental Levenberg-Marquardt algorithm
# Default is IC-GN
OptimizationAlgorithm = IC-LM

# The maximum number of iterations to perform during the optimization.  The default value
# is set conservatively high and should only be changed when instructed by the code.
# int - larger or equal to 1
# Default is 50
MaxIterations = 50

# The convergence threshold for the optimization.  The optimization will stop when the
# change in the cost function is less than this value.
# float - larger or equal to 0.0
# Default is 0.0001
ConvergenceThreshold = 0.0001